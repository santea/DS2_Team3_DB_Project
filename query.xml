<query date="20180207">
    <SELECT_CONCERT_HALL>select distinct ID, NAME, LOCATION, CAPACITY, count(*) as ASSIGNED from CONCERT_HALL, CONCERT where CONCERT_HALL.ID = CONCERT.CONCERT_HALL_ID order by ID</SELECT_CONCERT_HALL>
    <SELECT_CONCERT>select distinct ID, NAME, TYPE, PRICE, count(*) as BOOKED from CONCERT, RESERVATION where CONCERT.ID = RESERVATION.CONCERT_ID order by ID</SELECT_CONCERT>
    <SELECT_AUDIENCES>select ID, NAME, GENDER, AGE from AUDIENCE order by ID</SELECT_AUDIENCES>
    <INSERT_CONCERT_HALL>select 1</INSERT_CONCERT_HALL>
    <DELETE_CONCERT_HALL>select 1</DELETE_CONCERT_HALL>
    <INSERT_CONCERT>select 1</INSERT_CONCERT>
    <DELETE_CONCERT>select 1</DELETE_CONCERT>
    <INSERT_AUDIENCE>select 1</INSERT_AUDIENCE>
    <UPDATE_PCONCERT>select * from CONCERT_HALL where ID='%s' and 1 = %s</UPDATE_PCONCERT>
    <CREATE_TABLES>create table CONCERT_HALL (
        ID INT UNSIGNED AUTO_INCREMENT,
        NAME VARCHAR(200) NOT NULL,
        LOCATION VARCHAR(200) NOT NULL,
        CAPACITY int UNSIGNED CHECK (PERSONNEL > 0),
        PRIMARY KEY(ID)
        );

        create table CONCERT (
        ID INT UNSIGNED AUTO_INCREMENT,
        CONCERT_HALL_ID INT UNSIGNED REFERENCES CONCERT_HALL(ID),
        NAME VARCHAR(200) NOT NULL,
        TYPE VARCHAR(200) NOT NULL,
        PRICE INT UNSIGNED CHECK (PRICE >= 0),
        PRIMARY KEY(ID)
        );


        create table RESERVATION (
        CONCERT_ID int UNSIGNED REFERENCES CONCERT(ID) ,
        SEAT_NO int UNSIGNED CHECK (SEAT_NO > 0),
        AUDIENCE_ID int UNSIGNED REFERENCES AUDIENCE(ID),
        RESERVATION_FLAG boolean DEFAULT False,
        PRIMARY KEY(CONCERT_ID, SEAT_NO)
        );


        create table AUDIENCE (
        ID INT UNSIGNED AUTO_INCREMENT,
        NAME VARCHAR(200) NOT NULL,
        GENDER VARCHAR(1) NOT NULL,
        AGE INT UNSIGNED CHECK (AGE > 0),
        PRIMARY KEY(ID)

        );
    </CREATE_TABLES>
</query>