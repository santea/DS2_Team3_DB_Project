<query date="20180207">
    <SELECT_CONCERT_HALL>
        select ID, NAME, LOCATION, CAPACITY, (select count(*)
                                              from CONCERT
                                              where CONCERT.CONCERT_HALL_ID = HALL.ID) as ASSIGNED
        from CONCERT_HALL as HALL
    </SELECT_CONCERT_HALL>
    <SELECT_CONCERT>
        select distinct C.ID, C.NAME, C.TYPE, C.PRICE, (select count(*) from RESERVATION where CONCERT_ID = C.ID and RESERVATION_YN = 'Y') as BOOKED
        from CONCERT AS C
        group by C.ID, C.NAME, C.TYPE, C.PRICE
        order by ID
    </SELECT_CONCERT>
    <SELECT_CONCERT_HALL_BY_ID>
        select *
        from CONCERT_HALL
        where ID = '%s'
    </SELECT_CONCERT_HALL_BY_ID>
    <SELECT_AUDIENCES>
        select ID, NAME, GENDER, AGE
        from AUDIENCE
        order by ID
    </SELECT_AUDIENCES>
    <DELETE_CONCERT>
        select 1
    </DELETE_CONCERT>
    <INSERT_CONCERT_HALL>
        insert into CONCERT_HALL (NAME, LOCATION, CAPACITY)
        values ('%s', '%s', %s)
    </INSERT_CONCERT_HALL>
    <DELETE_CONCERT_HALL>
        delete from CONCERT_HALL
        where ID = '%s'
    </DELETE_CONCERT_HALL>
    <INSERT_CONCERT>
        insert into CONCERT (NAME, TYPE, PRICE)
        values ('%s', '%s', %s)
    </INSERT_CONCERT>
    <DELETE_CONCERT>
        select 1
    </DELETE_CONCERT>
    <INSERT_AUDIENCE>
        insert into AUDIENCE (NAME, GENDER, AGE)
        values ('%s', '%s', %s)
    </INSERT_AUDIENCE>
    <DELETE_AUDIENCE>
        select 1
    </DELETE_AUDIENCE>
    <UPDATE_PCONCERT>
        select 1
    </UPDATE_PCONCERT>
    <SELECT_PERFORMANCE>
        select * from CONCERT_HALL where ID='%s' and 1 = %s
    </SELECT_PERFORMANCE>
    <INSERT_RESERVATION>
        select 1
    </INSERT_RESERVATION>
    <DROP_TEST>
        drop table RESERVATION, CONCERT, AUDIENCE, CONCERT_HALL;
    </DROP_TEST>
    <CREATE_TABLES>
        create table CONCERT_HALL (
        ID INT UNSIGNED AUTO_INCREMENT,
        NAME VARCHAR(200) NOT NULL,
        LOCATION VARCHAR(200) NOT NULL,
        CAPACITY int UNSIGNED CHECK (PERSONNEL > 0),
        CONSTRAINT CONCERT_HALL_PK PRIMARY KEY (ID)
        );

        create table CONCERT (
        ID INT UNSIGNED AUTO_INCREMENT,
        CONCERT_HALL_ID INT UNSIGNED,
        NAME VARCHAR(200) NOT NULL,
        TYPE VARCHAR(200) NOT NULL,
        PRICE INT UNSIGNED CHECK (PRICE >= 0),
        PRIMARY KEY(ID),
        CONSTRAINT CONCERT_CONCERT_HALL_FK FOREIGN KEY (CONCERT_HALL_ID)
            REFERENCES CONCERT_HALL(ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
        );

        create table AUDIENCE (
        ID INT UNSIGNED AUTO_INCREMENT,
        NAME VARCHAR(200) NOT NULL,
        GENDER VARCHAR(1) NOT NULL,
        AGE INT UNSIGNED CHECK (AGE > 0),
        PRIMARY KEY(ID)
        );

        create table RESERVATION (
        CONCERT_ID int UNSIGNED,
        SEAT_NO int UNSIGNED CHECK (SEAT_NO > 0),
        AUDIENCE_ID int UNSIGNED,
        RESERVATION_YN varchar(1) DEFAULT 'N',
        PRIMARY KEY(CONCERT_ID, SEAT_NO),
        CONSTRAINT RESERVATION_CONCERT_FK FOREIGN KEY (CONCERT_ID)
            REFERENCES CONCERT(ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
        CONSTRAINT RESERVATION_AUDIENCE_FK FOREIGN KEY (AUDIENCE_ID)
            REFERENCES AUDIENCE(ID)
            ON DELETE CASCADE
            ON UPDATE CASCADE
        );
    </CREATE_TABLES>
</query>